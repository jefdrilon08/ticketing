.card.shadow-sm.p-4.mb-3.position-relative
  %h4.text-primary.mb-1 Request Information

  .row.mb-3
    .col
      %strong.text-muted{ style: "font-size: 1.1rem; font-weight: 500;" } Request Number:
      %div.text-dark{ style: "font-size: 1.2rem; font-weight: 600;" }= @inventory_request.request_number
    .col
      %strong.text-muted{ style: "font-size: 1.1rem; font-weight: 500;" } User:
      %div.text-dark{ style: "font-size: 1.2rem; font-weight: 600;" }= @inventory_request.user&.full_name || 'N/A'
    .col
      %strong.text-muted{ style: "font-size: 1.1rem; font-weight: 500;" } Request From:
      .d-flex.align-items-center.gap-2
        %div.text-dark{ style: "font-size: 1.2rem; font-weight: 600;" }= @inventory_request.branch&.name || 'N/A'
        %button.btn.btn-sm.btn-primary{ data: { bs_toggle: "modal", bs_target: "#editRequestFromModal" } } Edit
    .col
      %strong.text-muted{ style: "font-size: 1.1rem; font-weight: 500;" } Request To:
      .d-flex.align-items-center.gap-2
        %div.text-dark{ style: "font-size: 1.2rem; font-weight: 600;" }= @inventory_request.request_to&.name || 'N/A'
        %button.btn.btn-sm.btn-primary{ data: { bs_toggle: "modal", bs_target: "#editRequestToModal" } } Edit
    .col
      %strong.text-muted{ style: "font-size: 1.1rem; font-weight: 500;" } Status:
      .d-flex.align-items-center.gap-2
        %div.text-dark{ style: "font-size: 1.2rem; font-weight: 600;" }= @inventory_request.status.titleize


// Create Request Modal
.modal.fade#createRequestModal{ tabindex: "-1", aria: { labelledby: "createRequestModalLabel", hidden: "true" } }


/ Status Update Logs 
- if @inventory_request.data && @inventory_request.data["status_logs"]
  %h5.mt-3.text-primary.mb-2 Status Update Logs:
  .list-group
    - @inventory_request.data["status_logs"].each do |log|
      - user = User.find_by(id: log["updated_by"])
      .list-group-item.border-0.bg-light.mb-3.p-2.shadow-sm
        .row
          .col-8
            .d-flex.justify-content-between.align-items-center
              %span.font-weight-bold.text-dark Updated to: #{log["status"].titleize}
              %span.text-info.text-dark.ml-2
                - if user
                  = "By #{user.full_name}"
                - else
                  = "By unknown user"
          .col-4.text-end
            %span.font-weight-bold.text-dark{ style: "font-size: 0.9rem;" }
              = "#{log["updated_at"].to_datetime.strftime('%b %d, %Y at %I:%M %p')}"




/ Edit Request From Modal
.modal.fade#editRequestFromModal{ tabindex: "-1", aria: { labelledby: "editRequestFromModalLabel", hidden: "true" } }
  .modal-dialog
    .modal-content
      .modal-header
        %h5.modal-title#editRequestFromModalLabel Edit Request From
        %button.btn-close{ type: "button", data: { bs_dismiss: "modal" }, aria: { label: "Close" } }
      .modal-body
        = form_with url: update_request_from_inventory_request_path(@inventory_request), method: :patch, local: true do |f|
          .mb-3
            = f.label :branch_id, "Select Branch", class: "form-label"
            = f.collection_select :branch_id, Branch.all, :id, :name, {}, class: "form-select"
          = f.submit "Save", class: "btn btn-primary"

.modal.fade#editRequestToModal{ tabindex: "-1", aria: { labelledby: "editRequestToModalLabel", hidden: "true" } }
  .modal-dialog
    .modal-content
      .modal-header
        %h5.modal-title#editRequestToModalLabel Edit Request To
        %button.btn-close{ type: "button", data: { bs_dismiss: "modal" }, aria: { label: "Close" } }
      .modal-body
        = form_with url: update_request_to_inventory_request_path(@inventory_request), method: :patch, local: true do |f|
          .mb-3
            = f.label :request_to_id, "Select Branch", class: "form-label"
            = f.collection_select :request_to_id, Branch.all, :id, :name, {}, class: "form-select"
          = f.submit "Save", class: "btn btn-primary"


- if @inventory_request.status == 'pending'
  .card.shadow-sm.p-4.mb-3
    %h4.text-primary.mb-3 Add New Inventory Detail

    = form_tag inventory_request_details_path(@inventory_request), method: 'post', id: 'addDetailsForm' do
      = hidden_field_tag "inventory_request_detail[inventory_request_id]", @inventory_request.id
      = hidden_field_tag "inventory_request_detail[id]", nil, id: 'inventory_request_detail_id'
      = hidden_field_tag "inventory_request_detail[status]", "pending", id: "inventory_request_detail_status"
      
      = hidden_field_tag "inventory_request[data][user_id]", nil, id: "inventory_request_data_user_id"
      = hidden_field_tag "inventory_request[data][cluster_id]", nil, id: "inventory_request_data_cluster_id"
      = hidden_field_tag "inventory_request[data][branch_id]", nil, id: "inventory_request_data_branch_id"
      = hidden_field_tag "inventory_request[data][item_category_id]", nil, id: "inventory_request_data_item_category_id"

      .row
        .col-md-6
          .form-group.mb-3
            %label.font-weight-bold{ for: "inventory_request_detail_item_id" } Item
            - if @items.present?
              = select_tag "inventory_request_detail[item_id]",
                options_from_collection_for_select(@items, :id, :name),
                class: "form-select bg-secondary-subtle text-dark shadow-sm", id: "inventory_request_detail_item_id"
            - else
              %p No items available

        .col-md-6
          .form-group.mb-3
            %label.font-weight-bold{ for: "inventory_request_detail_unit" } Unit
            %div.form-control.bg-light.text-dark.shadow-sm{ id: "inventory_request_detail_unit", style: "min-height: 38px;" } pcs
            = hidden_field_tag "inventory_request_detail[unit]", "pcs", id: "inventory_request_detail_unit_hidden"

      .row
        .col-md-6
          .form-group.mb-3
            %label.font-weight-bold{ for: "inventory_request_detail_quantity_requested" } Quantity Requested
            = number_field_tag "inventory_request_detail[quantity_requested]", nil,
              class: "form-control bg-light text-dark shadow-sm", id: "inventory_request_detail_quantity_requested"

        .col-md-6
          .form-group.mb-4
            %label.font-weight-bold{ for: "inventory_request_detail_remarks" } Remarks
            = text_field_tag "inventory_request_detail[remarks]", "",
              class: "form-control bg-light text-dark shadow-sm", id: "inventory_request_detail_remarks"

      .row
        .col-md-6
          .form-group.mb-3
            %label.font-weight-bold{ for: "data_user_id" } User
            - if @users.present?
              = select_tag "inventory_request[data][user_id]",
                options_from_collection_for_select(@users, :id, :full_name),
                class: "form-select bg-secondary-subtle text-dark shadow-sm", id: "data_user_id"
            - else
              %p No users available

        .col-md-6
          .form-group.mb-3
            %label.font-weight-bold{ for: "data_branch_id" } Branch
            - if @branches.present?
              = select_tag "inventory_request[data][branch_id]",
                options_from_collection_for_select(@branches, :id, :name),
                class: "form-select bg-secondary-subtle text-dark shadow-sm", id: "data_branch_id"
            - else
              %p No branches available

      .row
        .col-md-6
          .form-group.mb-3
            %label.font-weight-bold{ for: "data_item_category" } Item Category
            - if @item_categories.present?
              = select_tag "inventory_request[data][item_category_id]",
                options_from_collection_for_select(@item_categories, :id, :name),
                class: "form-select bg-secondary-subtle text-dark shadow-sm", id: "data_item_category"
            - else
              %p No item categories available

        .col-md-6
          .form-group.mb-4
            %label.font-weight-bold{ for: "data_cluster" } Cluster
            - if @clusters.present?
              = select_tag "inventory_request[data][cluster_id]",
                options_from_collection_for_select(@clusters, :id, :name),
                class: "form-select bg-secondary-subtle text-dark shadow-sm", id: "data_cluster"
            - else
              %p No clusters available

      .text-end
        = button_tag type: 'submit', class: 'btn btn-success shadow-sm px-4 py-2 rounded', form: 'addDetailsForm', id: 'submitDetailBtn' do
          %i.bi.bi-plus-lg.me-2
          Add Details



%h4.text-primary.mt-4.mb-3 Inventory Request Details

.table-responsive
  %table.table.table-hover.table-bordered.text-center.shadow-sm
    %thead.table-light
      %tr
        %th.px-3.py-2 Item
        %th.px-3.py-2 Unit
        %th.px-3.py-2 Quantity Requested
        %th.px-3.py-2 Remarks
        %th.px-3.py-2 Category
        %th.px-3.py-2 Cluster
        %th.px-3.py-2 User
        %th.px-3.py-2 Branch
        %th.px-3.py-2 Actions

    %tbody
      - if @inventory_request.data&.dig('inventory_details').present?
        - @inventory_request.data['inventory_details'].each_with_index do |detail, index|
          %tr{ class: index.even? ? 'bg-white' : 'bg-gray-100' }
            - item = Item.find_by(id: detail['item_id'])
            %td.px-3.py-2= item&.name || "N/A"
            %td.px-3.py-2= detail['unit']
            %td.px-3.py-2= detail['quantity_requested']
            %td.px-3.py-2= detail['remarks']
            %td.px-3.py-2= detail['category_name']
            %td.px-3.py-2= detail['cluster_name']
            %td.px-3.py-2= detail['user_full_name']
            %td.px-3.py-2= detail['branch_name']
            %td.px-3.py-2
              .d-flex.flex-wrap.justify-content-center.gap-2
                = button_to destroy_inventory_request_json_detail_path(index: index, inventory_request_id: @inventory_request.id), method: :delete,
                  class: 'btn btn-sm btn-danger shadow-sm',
                  form: { data: { turbo: false } },
                  data: { confirm: 'Are you sure you want to delete this detail?' } do
                  Delete
                  
      - else
        %tr
          %td{ colspan: 9 } No details available.






:javascript
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('addDetailsForm')
    const submitBtn = document.getElementById('submitDetailBtn')
    const baseUrl = "#{inventory_request_details_path(@inventory_request)}"
    let editingRow = null

    form.addEventListener('submit', (e) => {
      const detailId = document.getElementById('inventory_request_detail_id').value

      if (detailId) {
        e.preventDefault()

        const updateUrl = `/inventory_requests/${form.querySelector('[name="inventory_request_detail[inventory_request_id]"]').value}/inventory_request_details/${detailId}`
        const hiddenMethod = document.createElement('input')
        hiddenMethod.type = 'hidden'
        hiddenMethod.name = '_method'
        hiddenMethod.value = 'patch'
        form.appendChild(hiddenMethod)
        form.action = updateUrl
        form.submit()

        setTimeout(() => {
          form.reset()
          document.getElementById('inventory_request_detail_id').value = ''
          submitBtn.innerHTML = '<i class="bi bi-plus-lg me-2"></i>Add Details'
          submitBtn.classList.remove('btn-warning')
          submitBtn.classList.add('btn-success')

          if (editingRow) {
            editingRow.classList.remove('d-none')
            editingRow.classList.remove('editing')
            editingRow = null
          }
        }, 300)
      }
    })

    // Edit button logic

    // Save and For Checking buttons logic
    document.querySelectorAll('.save-status-btn, .checking-status-btn').forEach(button => {
      button.addEventListener('click', async (e) => {
        e.preventDefault()

        const inventoryRequestId = button.dataset.requestId
        const newStatus = button.dataset.status

        const csrfToken = document.querySelector('meta[name="csrf-token"]').content

        const response = await fetch(`/inventory_requests/${inventoryRequestId}`, {
          method: 'PATCH',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': csrfToken
          },
          body: JSON.stringify({
            inventory_request: {
              status: newStatus
            }
          })
        })

        if (response.ok) {
          alert(`Status updated to "${newStatus}"`)
          window.location.reload()
        } else {
          alert('Failed to update status.')
        }
      })
    })
  })

