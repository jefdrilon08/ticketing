:css
  @import url("https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css")

%div.card
  %div.card-header
    %h4= @inventory.new_record? ? "New Item - Stock" : "Update Item - Stock"
  %div.card-body
    %form{ action: @inventory.new_record? ? stocks_path : update_inventory_path(@inventory), method: "post", id: "inventoryForm" }
      %input{ type: "hidden", name: "authenticity_token", value: form_authenticity_token }
      - unless @inventory.new_record?
        %input{ type: "hidden", name: "_method", value: "patch" }

      %div.form-group
        %label{ for: "title" } Title
        %input.form-control{ type: "text", id: "title", name: "inventory[title]", value: @inventory.data["title"].to_s, required: false }

      %div.form-group
        %label{ for: "item_name" } Item Name
        - if @items.present?
          %select.form-control{ id: "item_name", name: "inventory[item_id]", required: true }
            %option{ value: "" } -- SELECT ITEM --
            - @items.each do |item|
              %option{ value: item.id, selected: @inventory.item_id == item.id }= item.name
        - else
          %p No items available.

      %div.form-group
        %label{ for: "inventory_type" } Type
        %select.form-control{ id: "inventory_type", name: "inventory[type]", required: true }
          %option{ value: "" } -- SELECT --
          %option{ value: "regular", selected: @inventory.type == 'regular' } Regular
          %option{ value: "service", selected: @inventory.type == 'service' } Service
          %option{ value: "distribute", selected: @inventory.type.nil? || @inventory.type == 'distribute' } Distribute

      %div.form-group
        %label{ for: "serial_number" } Serial Number
        %input.form-control{ 
          type: "text", 
          id: "serial_number", 
          name: "inventory[serial_number]", 
          value: @inventory.serial_number, 
          disabled: false, 
          required: true 
        }

      %div.form-group
        %label{ for: "unit" } Unit
        %input.form-control{ type: "text", id: "unit", name: "inventory[unit]", value: @inventory.unit, required: true }

      %div.form-group
        %label{ for: "quantity" } Quantity
        %input.form-control{ 
          type: "number", 
          id: "quantity", 
          name: "inventory[quantity]", 
          value: @inventory.new_record? ? 0 : @inventory.quantity, 
          min: 0, 
          required: true 
        }

      %div.form-group
        %label{ for: "purchase_date" } Purchase Date
        %input.form-control{ type: "date", id: "purchase_date", name: "inventory[purchase_date]", value: @inventory.purchase_date, required: true }

      %div.form-group
        %label{ for: "supplier_name" } Supplier Name
        - if @suppliers.present?
          %select.form-control{ id: "supplier_name", name: "inventory[supplier_id]", required: true }
            %option{ value: "" } -- SELECT SUPPLIER --
            - @suppliers.each do |supplier|
              %option{ value: supplier.id, selected: @inventory.supplier_id == supplier.id }= supplier.name
        - else
          %p No suppliers available.

      %div.form-group
        %label{ for: "status" } Status
        %select.form-control{ id: "status", name: "inventory[status]", required: true }
          %option{ value: "" } -- SELECT STATUS --
          %option{ value: "Active", selected: @inventory.status == "Active" } Active
          %option{ value: "Dispose", selected: @inventory.status == "Dispose" } Dispose

      %div.form-group
        %button.btn.btn-primary{ type: "submit" }= @inventory.new_record? ? "Add Stock" : "Update Stock"

:javascript
  document.addEventListener("DOMContentLoaded", function() {
    var items = #{raw @items.to_json.html_safe};

    function checkItemType() {
      var form = document.getElementById("inventoryForm");
      if (!form) return;

      var itemSelect = form.querySelector("#item_name");
      var serialNumberInput = form.querySelector("#serial_number");
      var selectedItemId = itemSelect.value;

      if (!selectedItemId) {
        serialNumberInput.disabled = false;
        serialNumberInput.required = true;
        return;
      }

      var selectedItem = items.find(function(item) {
        return item.id == selectedItemId;
      });

      if (selectedItem && selectedItem.hasOwnProperty('item_type')) {
        if (selectedItem.item_type === 'supply') {
          serialNumberInput.disabled = true;
          serialNumberInput.required = false;
        } else {
          serialNumberInput.disabled = false;
          serialNumberInput.required = true;
        }
      } else {
        serialNumberInput.disabled = false;
        serialNumberInput.required = true;
      }
    }

    var itemSelect = document.getElementById("item_name");
    if (itemSelect) {
      itemSelect.addEventListener("change", function() {
        checkItemType();
      });
    }

    checkItemType(); 
  });
