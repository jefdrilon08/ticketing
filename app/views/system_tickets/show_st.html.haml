.card.some{:style=>"padding:1%"}
  %h2
    Edit #{@system_name}
  =form_tag "/system_tickets/make_private",method: 'POST' do
    .form-group
      =text_field_tag :id,params[:id],class:'form-control',style:'display:none'
    -if SystemTicket.find(params[:id]).is_private
      .form-group
        =button_tag type: 'submit', class: 'btn btn-warning' do
          %center
            %h4
              Currently private. Click to make system public.
    -else
      .form-group
        =button_tag type: 'submit', class: 'btn btn-success' do
          %center
            %h4
              Currently public. Click to make system private.
  %hr{:style=>"color:white"}
  .card.some{:style=>"padding:1%"}
    %div.row
      %div.col-5
        %table.table{:style=>"border-color:white;font-size:110%"}
          %tr
            %td{:style=>"width:20%"}
              %label
                Current Members
            %td{:style=>"width:20%"}
              %label
                Role
            %td{:style=>"width:10%"}
              %label
                Status
          =form_tag "/system_tickets/edit_member",method: 'POST' do 
            .form-group
              =text_field_tag :id,params[:id],class:'form-control',style:'display:none'
            -@system_members.each do |x|
              %tr
                %td
                  #{User.find(x.user_id)}
                %td
                  .form-group
                    =text_field_tag :mem_id,params[:mem_id],class:'form-control',style:'display:none',value:x.id,id:"sel/#{x.id}"
                  -if x.role!="Admin"
                    -if x.status!="pending"
                      .form-group
                        =select_tag :task,options_for_select([], params[:task]),class:'form-control select-select2',style:"width:50%;margin-top:-6px",id:"#{x.role}/#{x.id}"
                %td
                  -if SystemTicketsUser.where(user_id:x.user_id,system_ticket_id:@system_id)[0].status=="active"
                    .badge.bg-success
                      #{SystemTicketsUser.where(user_id:x.user_id,system_ticket_id:@system_id)[0].status}
                  -if SystemTicketsUser.where(user_id:x.user_id,system_ticket_id:@system_id)[0].status=="inactive"
                    .badge.bg-danger
                      #{SystemTicketsUser.where(user_id:x.user_id,system_ticket_id:@system_id)[0].status}
                  -if SystemTicketsUser.where(user_id:x.user_id,system_ticket_id:@system_id)[0].status=="pending"
                    .badge.bg-warning
                      #{SystemTicketsUser.where(user_id:x.user_id,system_ticket_id:@system_id)[0].status}
                  -if SystemTicketsUser.where(user_id:x.user_id,system_ticket_id:@system_id)[0].status=="admin"
                    .badge.bg-primary
                      #{SystemTicketsUser.where(user_id:x.user_id,system_ticket_id:@system_id)[0].status}
            %tr
              %td
                .form-group
                  =button_tag type: 'submit', class: 'btn btn-primary' do
                    Save Roles
      %div.col-3
        %table.table{:style=>"border-color:white;font-size:110%;"}
          %tr
            %td
          %tr
            %td
          %tr
            %th
          -@system_members.each do |x|
            %tr{:style=>"line-height:95%"}
              %td
                =form_tag "/system_tickets/edit_member_status", multipart: true, method: 'POST' do
                  .form-group
                    =text_field_tag :mem_id,params[:mem_id]=x.id,class:'form-control',style:'display:none'
                  .form-group
                    =text_field_tag :status,params[:status]=x.status,class:'form-control',style:'display:none'
                  .form-group
                    = button_tag type: 'submit',class:'btt-linkto' do
                      %p
                        -if SystemTicketsUser.where(user_id:x.user_id,system_ticket_id:@system_id)[0].status=="active"
                          Deactivate
                        -if SystemTicketsUser.where(user_id:x.user_id,system_ticket_id:@system_id)[0].status=="inactive"
                          Activate
                        -if SystemTicketsUser.where(user_id:x.user_id,system_ticket_id:@system_id)[0].status=="pending"
                          Approve
                %td
      %div.col-4  
  %hr{:style=>"color:white"}
  .card.some{:style=>"padding:1%"}              
    =form_tag "/system_tickets/add_member_st", multipart: true, method: 'POST' do
      .form-group
        =text_field_tag :id,params[:id]=@system_id,class:'form-control',style:'display:none'
      %table.table{:style=>"border-color:white;font-size:110%"} 
        %tr
          %td
            %label
              Select New Member(s)
            %div{:style=>"display:flex"}
              %select{:class => "form-control",:style=>"width:50%",:id=>"member-sel"}
                -@non_system_members.each do |x|
                  %option{:value => x,:id=>"selected#{x}"}
                    #{User.find(x).last_name}, #{User.find(x).first_name}
              %div
                &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
              %button{:class=> "btn btn-info btn-block", :onclick => "{addMember()}", :type=>"button"}
                Add
              %div{:id=>"dup",:style=>"display:none;color:red;margin-bottom:-20px;padding-top:10px"}
                %p
                  &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*Duplicate member
              %div{:id=>"empty",:style=>"display:none;color:red;margin-bottom:-20px;padding-top:10px"}
                %p
                  &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp*Members cannot be empty
        %tr
          %td
            %label
              Selected Members
            .card{:style=>"min-height:100px;padding:1%"}
              .form-group
                %table.table{:style=>"border-color:white;font-size:110%",:id=>"mem-container"}
        %tr
          %td
            .form-group
              %div{id:"sel-mem"}
            .form-group
              =button_tag type: 'button', class: 'btn btn-primary',onclick:"submitArray()",id:"sub-btn3" do
                Save Members
  %hr{:style=>"color:white"}
  .card.some{:style=>"padding:1%"}
    %table.table{:style=>"border-color:white;font-size:110%"} 
      %tr
        %td
          =form_tag "/system_tickets/update_auto", method: 'POST' do
            %label
              Number of days before auto-closing a ticket
            .form-group
              =number_field :autoclose,params[:autoclose],class:'form-control',required:true, placeholder:'Select a number.', step:1, min:1,style:'width:5%',value:@autoclose
            %tr 
              %td
                .form-group
                  =text_field_tag :id,params[:id],class:'form-control',style:'display:none'
                .form-group
                  =button_tag type: 'submit', class: 'btn btn-primary',id:"sub-btn" do
                    Save   
  %hr{:style=>"color:white"}
  .card.some{:style=>"padding:1%"}    
    %table.table{:style=>"border-color:white;font-size:110%"}
      =form_tag "/system_tickets/add_default_milestone", multipart: true, method: 'POST' do
        %tr
          %td
            .form-group
              %label
                Default Milestones
                =text_field_tag :id,params[:id],class:'form-control',style:'display:none'
        %tr
          %td{:style=>"width:50%"}
            .form-group
              =text_field_tag :new_d_ms,params[:new_d_ms],class:'form-control',placeholder:'Add new default milestone'
          %td
            &nbsp&nbsp&nbsp&nbsp&nbsp
            .form-group
              =button_tag type: 'submit', class: 'btn btn-info' do
                Add
    %table.table.table-bordered.table-sm{:style=>"font-size:110%"}
      -if @def_milestones.empty?
        %tr
          %td
            %center
              %h5{:style=>"margin:50px"}
                No default milestone found.
      -else
        %tr
          %th{:style=>"width:10%"}
            %center
              Date created
          %th{:style=>"width:10%"}
            %center
              Date modified
          %th{:style=>"width:70%"}
            Milestone details
          %th
            Actions
        -@def_milestones.each_with_index do |x,y|
          %tr
            %td{:style=>"padding:15px"}
              %center
                #{x[0].to_date}
            %td{:style=>"padding:15px"}
              %center
                #{x[2].to_date}
            %td{:style=>"padding:15px"}
              #{x[1]}
            %td{:style=>"padding:15px"}
              %center
                = link_to "#", data: { "bs-toggle": "modal", "bs-target": "#modal-edit-defaultms"},onclick:"returnIndex(#{y})" do
                  =button_tag type: 'submit', class: 'btn btn-info' do
                    Edit
                %nbsp
                = link_to "#", data: { "bs-toggle": "modal", "bs-target": "#modal-delete-defaultms"},onclick:"returnIndex(#{y})" do
                  =button_tag type: 'submit', class: 'btn btn-danger' do
                    Delete
#modal-delete-defaultms.modal.fade
  .modal-dialog
    .modal-content
      .modal-header
        %h3.modal-title 
          Confirm Deletion
      .modal-body
        %hr{:style=>"height:15px;color:white"}
        %div{:id=>"toDelete"}
        %hr{:style=>"height:30px;color:white"}
        %div{:id=>"confirmed",:style=>"display:none;color:green"}
          Success! Deleting milestone...
        = form_tag "delete_default_milestone", method: 'post' do
          .form-group
            =text_field_tag :index_d,params[:index_d],class:'form-control',id:"forDelete",style:"display:none"
          %hr{style:"height:5px;color:white"}
          .form-group
            =button_tag type: 'submit', class: 'btn btn-danger',onclick:'confirmDelete()' do
              Confirm

#modal-edit-defaultms.modal.fade
  .modal-dialog
    .modal-content
      .modal-header
        %h3.modal-title 
          Edit Details
      .modal-body
        %label
          Old Details
        %div{id:"toEdit"}
        %hr{style:"height:10px;color:white"} 
        %label
          New Details
        = form_tag "edit_default_milestone", method: 'POST' do
          .form-group
            =text_area_tag :details,params[:details],class:'form-control',required:true
          .form-group
            =text_field_tag :index_e,params[:index_e],class:'form-control',id:"forEdit",style:"display:none"
          %hr{style:"height:5px;color:white"}
            .form-group
              =button_tag type: 'submit', class: 'btn btn-primary',id:"editDetails" do
                Save

:css
    .btt-linkto{background:none!important;border:none;padding:0!important;color:#0D6EFD;text-decoration:underline;cursor:pointer;}
    .btt-linkto:hover{color:#0A58CA;}
    form {display: inline;}
    .form-group {display: inline;}

:javascript
  var arr=[]
  onload=taskSelect()
  
  function addMember() {
    var x=document.getElementById("member-sel").value
    var y=document.getElementById("selected"+x).label
    var w=0
    for(i=0;i<arr.length;i++)
    {
      if(arr[i][0]==x)
      {
        w+=1;
      }
    }
    if(w==0)
    {
      document.getElementById("empty").style.display="none";
      document.getElementById("sub-btn3").type="submit"
      arr.push([x,y])
      document.getElementById("dup").style.display="none"
    }
    else
    {
      document.getElementById("dup").style.display="block"
      document.getElementById("empty").style.display="none";
    }

    displayMembers()
  }

  function displayMembers() {
    document.getElementById("mem-container").innerHTML=""
    document.getElementById("sel-mem").innerHTML=""

    var slct=document.createElement('select');
        slct.id="in-sel-mem"
        slct.multiple="multiple"
        slct.style.display="none"
        slct.name="members[]"

    console.log(slct.value+" val")

    document.getElementById("sel-mem").append(slct)

    if(arr.length==0) document.getElementById("sub-btn3").type="button";

    for(x=0;x<arr.length;x++)
    {
      var btt = document.createElement('button');
          btt.className = "btn btn-sm btn-danger";
          btt.type = "button";
          btt.innerText= "Remove";
      var temprow=document.getElementById("mem-container").insertRow(x)
      var cell1=temprow.insertCell(0)
          cell1.style="width:50%"
          cell1.innerHTML=arr[x][1]
      var cell2=temprow.insertCell(1)
          cell2.id="btt"+arr[x][0]
          btt.id="btt"+arr[x][0]
          btt.addEventListener("click", removeMember, false);
      document.getElementById(cell2.id).appendChild(btt)

      var option=document.createElement('option')
          option.text=arr[x][0]
          option.value=arr[x][0]
          option.setAttribute('selected', 'selected')

      slct.add(option)
    }
    slct.options.selected=true
  }

  function removeMember() {
    console.log(this.id.substring(3))
    for(x=0;x<arr.length;x++)
    {
      if(this.id.substring(3)==arr[x][0])
        arr.splice(x,1)
    }

    displayMembers()
  }

  function submitArray()
  {
    if(arr.length==0)
    {
      document.getElementById("empty").style.display="block";
      document.getElementById("dup").style.display="none"
    }
    else
    {
      console.log("not empty")
      console.log(arr)
      document.getElementById("empty").style.display="none";
      return arr;
    }
  }

  function taskSelect()
    {
        var arr_id=[]
        var sel=document.getElementsByName("task");

        for(i=0;i<=sel.length-1;i++)
        {
            var id=sel[i].id
            var temp=id.split("/")
            arr_id.push([temp[1],id])
            
            for(j=0;j<=3;j++)
            {
                var opt=document.createElement("option");
                switch(j)
                {
                    case 0:
                    {
                        opt.text="Viewer"
                        opt.value="Viewer"
                        if(opt.value==temp[0]) opt.setAttribute('selected','selected');
                    } break;
                    case 1:
                    {
                        opt.text="Developer"
                        opt.value="Developer"
                        if(opt.value==temp[0]) opt.setAttribute('selected','selected');
                    } break;
                    case 2:
                    {
                        opt.text="Approver"
                        opt.value="Approver"
                        if(opt.value==temp[0]) opt.setAttribute('selected','selected');
                    } break;
                    case 3:
                    {
                        opt.text="Checker"
                        opt.value="Checker"
                        if(opt.value==temp[0]) opt.setAttribute('selected','selected');
                    }
                }
                document.getElementById(id).add(opt)
            }
        }
        for(i=0;i<=arr_id.length-1;i++)
        {
            document.getElementById("sel/"+arr_id[i][0]).name="o-"+i
            document.getElementById(arr_id[i][1]).name="t-"+i
        }
    }
  function returnIndex(x)
  {
    var milestones=#{@def_milestones}
    document.getElementById("forEdit").value=x
    document.getElementById("forDelete").value=x
    document.getElementById("toDelete").innerHTML="Are you sure you want to delete "+milestones[x][1]+"?"
    document.getElementById("toEdit").innerHTML=milestones[x][1]
  }

  function confirmDelete()
  {
    document.getElementById("confirmed").style.display="block";
  }